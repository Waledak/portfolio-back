name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          command_timeout: 30m
          script: |
            # Change directory to your deployment folder
            cd portfolio
            cd portfolio-back
            
            # Create .env file using GitHub secrets
            cat > .env <<EOF
            HOST=${{ secrets.HOST }}
            PORT=${{ secrets.PORT }}
            APP_KEYS=${{ secrets.APP_KEYS }}
            API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}
            ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
            TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}

            DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}
            DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            DATABASE_SSL=${{ secrets.DATABASE_SSL }}

            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_BUCKET=${{ secrets.AWS_BUCKET }}
            EOF

            # Optionally, confirm which branch you're deploying
            echo "Deploying branch $(git rev-parse --abbrev-ref HEAD)"
            
            # Pull the latest changes from GitHub
            git pull origin main

            # Optionally, rebuild your Docker image(s) using Docker Compose
            docker compose pull
            docker compose build

            # Start the updated services in detached mode
            docker compose up -d
